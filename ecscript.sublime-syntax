%YAML 1.2
# See http://www.sublimetext.com/docs/3/syntax.html
---
name: EcScript
file_extensions:
  - ecs
  - ecscript

scope: source.ecscript
contexts:
  main:
    # start of comment
    - match: '#'
      scope: punctuation.definition.comment.ecscript
      push: comment

    # start of block
    - match: \(
      push: block

    # stray block end
    - match: \)
      scope: invalid.illegal.stray-bracket-end

  comment:
    - meta_scope: comment.line.ecscript
    # end of comment
    - match: $
      pop: true

  string:
    - meta_scope: string.quoted.double.ecscript
    # escaped character
    - match: '\\[\\"]'
      scope: constant.character.escape.ecscript
    # end of string
    - match: '"'
      scope: punctuation.definition.string.end.ecscript
      pop: true

  block:
    # end of block
    - match: \)
      pop: true
    - include: main

    # start of string
    - match: '"'
      scope: punctuation.definition.string.begin.ecscript
      push: string

    # variable / function definition
    - match: '\bdef_(?:bool|fun|pose|real(?:_vec)?|rot|string|trans|u32(?:_vec)?)\b'
      scope: storage.type.ecscript

    # program structure / control / branching
    - match: '\b(?:motion_(?:para|seq)|if|while|break|return|wait(?:_for_settle)?|(?:group|stream)_motion_seq|include|eval)\b'
      scope: keyword.control.ecscript

    # operator
    - match: '(?::=|[-+&|*/^]|[=~]=|[!<>]=?)'
      scope: keyword.operator.ecscript

    # built-in function (Actin Core)
    - match: '\b(?:QUAT|AA|RPY|YPR|DCC|DCR|dot|cross|inv|norm|mod|pow|sqrt|abs|a(?:cos|sin|tan2?)|ceil|cos|exp|floor|log(?:2|10)?|max|min|sin|randn?|round|tan|(?:elem|size)_of|get_(?:rot|trans)|real_(?:to_trans|vec_to_(?:pose|trans))|rot_to_real_vec|to_(?:real|u32)|get_(?:base_(?:acceleration|speed)_factor|control_description_id|ee_(?:pose|set_id)|frame|joint_(?:ee(?:_velocity)?|positions|velocities)|link_id|manip_id|state_time)|hit_joint_limit|is_converged|get_data_map_(?:bool|pose|real(?:_vec)?|rot|string|trans|u32(?:_vec)?)|get_digital_input|elapsed_time)\b'
      scope: entity.name.ecscript

    # built-in function (Actin RCF)
    - match: '\bget_data_store_(?:(?:bit_)?u(?:8|16|32|64)|bool|pose|real(?:_vec)?|rot|string|trans|u32(?:_vec)?)\b'
      scope: entity.name.ecscript

    # deprecated function (Actin Core)
    - match: '\b(?:get_dm_(?:bool|pose|real(?:_vec)?|rot|string|trans|u32(?:_vec)?)|get_di)\b'
      scope: invalid.deprecated.ecscript

    # command (Actin Core)
    - match: '\b(?:set_elem_of|(?:at|de)tach_manip|(?:dis|en)able_joint_limits|(?:(?:in|ex)clude(?:_attach)?|check)_collision|set_(?:base_(?:accel|speed)_factor|control_description|ee_set|named_frame|pcs|position_(?:control_method|state)|sensed_state|tcp|path_offset|payload)|move_(?:circular|joint(?:_mix|_rel)?|linear|pose(?:_rel)?|helical|path)|speed|stop|find_solution|rrt_plan|set_data_map_(?:bool|pose|real(?:_vec)?|rot|string|trans|u32(?:_vec)?)|set_digital_(?:in|out)put|start_timer)\b'
      scope: variable.language.ecscript

    # command (Actin RCF)
    - match: '\b(?:invoke|set_data_store_(?:(?:bit_)?u(?:8|16|32|64)|bool|pose|real(?:_vec)?|rot|string|trans|u32(?:_vec)?))\b'
      scope: variable.language.ecscript

    # command (Actin Extensions)
    - match: '\b(?:move_joint_seq|rrt_connect_plan)\b'
      scope: variable.language.ecscript

    # deprecated command (Actin Core)
    - match: '\b(?:set_(?:acd|apcm|baf|bsp|tool_offset)|(?:interp_)?pose_seq|move_pose_b|set_dm_(?:bool|pose|real(?:_vec)?|rot|string|trans|u32(?:_vec)?)|set_d[io]|profile_(?:joint|pose))\b'
      scope: invalid.deprecated.ecscript

    # assertion
    - match: '\b(?:assert)\b'
      scope: keyword.control.ecscript

    # deprecated assertion
    - match: '\b(?:assert_approx_eq)\b'
      scope: invalid.deprecated.ecscript

    # print-out (Actin Core)
    - match: '\b(?:print)\b'
      scope: variable.language.ecscript

    # print-out (Actin RCF)
    - match: '\b(?:print_log)\b'
      scope: variable.language.ecscript

    # parameter name (Actin Core)
    - match: '\b(?:BORDER|CNA|AccelerationFactor|AssertTolerance|Cache(?:Cost|NumWaypoints|Threshold)|Collision(?:StepSize|Threshold)|InitialPosition|MaxTime|PathShortening(?:Iterations|Tolerance)|SpeedFactor|StepSize|Tolerance|Attach(?:Exclusion|Placement))\b'
      scope: support.constant.ecscript

    # parameter name (Actin RCF)
    - match: '\b(?:INFO|WARNING|ERROR|CRITICAL)\b'
      scope: support.constant.ecscript

    # parameter name (Actin Extensions)
    - match: '\b(?:BlendingThreshold|DesiredBlending|JerkFactor|PredefinedSeed|RunSynchronous|Scaling(?:ActiveKey|MaxTimeMicroseconds|StepSize)|SpeedLimitNamedFrames|VelocityTolerance)\b'
      scope: support.constant.ecscript

    # constants (verbal)
    - match: '\b(?:TRUE|FALSE|BASE|INF)\b'
      scope: constant.numeric.ecscript

    # constants (non-verbal)
    - match: '\b(?:0x[0-9a-fA-F]+)\b|(?<![A-Za-z_])(?:-?(?:\.[0-9]+|[0-9]+(?:\.[0-9]*)?)(?:[Ee]-?[0-9]+)?(?:deg|g|in|kg|mm?|rad)?)\b'
      scope: constant.numeric.ecscript

    # deprepcated constants (verbal)
    - match: '\b(?:true|false)\b'
      scope: invalid.deprecated.ecscript
